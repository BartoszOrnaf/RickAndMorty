{"version":3,"sources":["components/Navigation/navigation.module.scss","components/DeadOrAlive/assets/loading.png","components/DeadOrAlive/Loading.js","components/Score/Score.js","components/DeadOrAlive/Game.js","components/HOC/withApi.js","components/RickTalks/Store/rickTalksReducer.js","appStore/appReducer.js","appStore/appStore.js","appStore/configureStore.js","components/HOC/withScore.js","components/DeadOrAlive/DeadOrAlive.js","components/WhoIsWho/Board.js","components/WhoIsWho/Card.js","components/WhoIsWho/Game.js","components/WhoIsWho/WhoIsWho.js","components/Navigation/Navigation.js","components/RickTalks/RickTalks.js","App.js","index.js"],"names":["module","exports","Loading","className","src","loading","alt","Score","props","scoreStyle","scoreMessage","characterImg","score","nextOne","playAgain","currentTry","type","onClick","Game","character","checkAnswer","image","name","withApi","WrappedComponent","charactersQuantity","state","charactersCount","charactersArr","randomIds","getCharactersArr","bind","getCharactersCount","callback","this","getRandomIds","getCharacters","fetch","then","res","json","setState","info","count","catch","error","console","randomIdsCount","length","currentId","Math","floor","random","indexOf","push","method","React","Component","initialState","scoreArr","averageScore","gamesPlayed","rickTalksReducer","currentScoreState","scoreAction","payload","newScore","_","round","mean","appReducer","action","rickTalks","appStore","preloadedState","enhancers","composeWithDevTools","composedEnhancers","compose","createStore","configureStore","withScore","scoreDisplay","toggleScoreDisplay","increment","incrementScore","incrementCurrentTry","resetGame","setScoreMessage","dispatch","stateValue","prevState","sendFinalScore","DeadOrAlive","setCharacter","toggleLoadingDisplay","answer","status","Board","id","children","onDrop","e","preventDefault","cardId","dataTransfer","getData","card","document","getElementById","all","getElementsByClassName","i","style","backgroundImage","target","appendChild","slice","onDragOver","defaultProps","undefined","Card","draggable","onDragStart","setData","stopPropagation","searchedCharacterName","map","key","WhoIsWho","searchedCharacter","getSearchedCharacter","randomIndex","toString","setTimeout","Navigation","to","styles","title","activeClassName","titleActive","navbarLink","navbarLinkActive","connect","addScore","App","path","render","ReactDOM","store"],"mappings":"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","file":"static/js/main.512715a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"font--big\":\"navigation_font--big__3RPpK\",\"font--medium\":\"navigation_font--medium__tkh9M\",\"font--small\":\"navigation_font--small__29cNQ\",\"font--small--red\":\"navigation_font--small--red__2GZd7\",\"font--small--green\":\"navigation_font--small--green__2t-Pi\",\"button--medium\":\"navigation_button--medium__19i_E\",\"character__img\":\"navigation_character__img__2DsOR\",\"character__img--small\":\"navigation_character__img--small__1bmUM\",\"container__games\":\"navigation_container__games__Rl8eo\",\"navbarLink\":\"navigation_navbarLink__2wn_j\",\"navbarLinkActive\":\"navigation_navbarLinkActive__3WXsH\",\"titleContainer\":\"navigation_titleContainer__2BH21\",\"title\":\"navigation_title__1LSxP\",\"titleActive\":\"navigation_titleActive__26pz4\"};","module.exports = __webpack_public_path__ + \"static/media/loading.fab02513.png\";","import React from 'react';\r\nimport '../../index.scss';\r\nimport loading from './assets/loading.png';\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"font--small--green\">loading</h1>\r\n      <img src={loading} className=\"character__img\" alt=\"character\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport '../../index.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Score(props) {\r\n  const {\r\n    scoreStyle,\r\n    scoreMessage,\r\n    characterImg,\r\n    score,\r\n    nextOne,\r\n    playAgain,\r\n    currentTry,\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      {currentTry < 11 && (\r\n        <div>\r\n          <h1 className={scoreStyle}>{scoreMessage}</h1>\r\n          <img src={characterImg} className=\"character__img\" alt=\"character\" />\r\n          <h2 className=\"font--small\">Your score is: {score}</h2>\r\n          <button type=\"button\" className=\"button--medium\" onClick={nextOne}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      )}\r\n      {currentTry === 11 && (\r\n        <div>\r\n          <h1 className={scoreStyle}>{scoreMessage}</h1>\r\n          <img src={characterImg} className=\"character__img\" alt=\"character\" />\r\n          <h2 className=\"font--small--green\">\r\n            Your final score is: {score} / 10\r\n          </h2>\r\n          <button type=\"button\" className=\"button--medium\" onClick={playAgain}>\r\n            Play again!\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nScore.propTypes = {\r\n  nextOne: PropTypes.func.isRequired,\r\n  playAgain: PropTypes.func.isRequired,\r\n  scoreMessage: PropTypes.string.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  currentTry: PropTypes.number.isRequired,\r\n  scoreStyle: PropTypes.string.isRequired,\r\n  characterImg: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport '../../index.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Game(props) {\r\n  const { character, currentTry, checkAnswer } = props;\r\n  return (\r\n    <div>\r\n      <h1 className=\"font--small\">\r\n        {currentTry}\r\n        of 10\r\n      </h1>\r\n      <img src={character.image} className=\"character__img\" alt=\"character\" />\r\n      <h2 className=\"font--small\">{character.name}</h2>\r\n      <h1 className=\"font--medium\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"button--medium\"\r\n          onClick={() => {\r\n            checkAnswer('Dead');\r\n          }}\r\n        >\r\n          {' '}\r\n          Dead{' '}\r\n        </button>\r\n        ,{' '}\r\n        <button\r\n          type=\"button\"\r\n          className=\"button--medium\"\r\n          onClick={() => {\r\n            props.checkAnswer('Alive');\r\n          }}\r\n        >\r\n          {' '}\r\n          alive{' '}\r\n        </button>{' '}\r\n        or{' '}\r\n        <button\r\n          type=\"button\"\r\n          className=\"button--medium\"\r\n          onClick={() => {\r\n            props.checkAnswer('unknown');\r\n          }}\r\n        >\r\n          {' '}\r\n          unknown\r\n        </button>\r\n        ?\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nGame.propTypes = {\r\n  character: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    status: PropTypes.string,\r\n    species: PropTypes.string,\r\n    type: PropTypes.string,\r\n    gender: PropTypes.string,\r\n    origin: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      url: PropTypes.string,\r\n    }),\r\n    location: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      url: PropTypes.string,\r\n    }),\r\n    image: PropTypes.string,\r\n    episode: PropTypes.arrayOf(PropTypes.string),\r\n    url: PropTypes.string,\r\n    created: PropTypes.string,\r\n  }).isRequired,\r\n  currentTry: PropTypes.number.isRequired,\r\n  checkAnswer: PropTypes.func.isRequired,\r\n};\r\nexport default Game;\r\n","import React from 'react';\r\n\r\nconst withApi = (WrappedComponent, charactersQuantity) => {\r\n  class WithApi extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        charactersCount: 0,\r\n        charactersArr: [],\r\n        randomIds: [],\r\n      };\r\n      this.getCharactersArr = this.getCharactersArr.bind(this);\r\n      this.getCharactersCount = this.getCharactersCount.bind(this);\r\n    }\r\n\r\n    getCharactersArr(callback) {\r\n      this.getCharactersCount(() => {\r\n        this.getRandomIds(charactersQuantity, () => {\r\n          this.getCharacters(callback);\r\n        });\r\n      });\r\n    }\r\n\r\n    getCharactersCount(callback) {\r\n      fetch(`https://rickandmortyapi.com/api/character`)\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          this.setState(\r\n            {\r\n              charactersCount: res.info.count,\r\n            },\r\n            callback\r\n          );\r\n        })\r\n        .catch((error) => console.error('error:', error));\r\n    }\r\n\r\n    getRandomIds(randomIdsCount, callback) {\r\n      const randomIds = [];\r\n      const { charactersCount } = this.state;\r\n      while (randomIds.length < randomIdsCount) {\r\n        const currentId = Math.floor(Math.random() * (charactersCount - 1)) + 1;\r\n        if (randomIds.indexOf(currentId) === -1) {\r\n          randomIds.push(currentId);\r\n        }\r\n      }\r\n\r\n      this.setState(\r\n        {\r\n          randomIds,\r\n        },\r\n        callback\r\n      );\r\n    }\r\n\r\n    getCharacters(callback) {\r\n      const { randomIds } = this.state;\r\n      fetch(`https://rickandmortyapi.com/api/character/${randomIds}`, {\r\n        method: 'GET',\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          this.setState(\r\n            {\r\n              charactersArr: res,\r\n            },\r\n            callback\r\n          );\r\n        })\r\n        .catch((error) => console.error('error:', error));\r\n    }\r\n\r\n    render() {\r\n      const { charactersArr } = this.state;\r\n      return (\r\n        <WrappedComponent\r\n          getCharactersArr={this.getCharactersArr}\r\n          charactersArr={charactersArr}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return WithApi;\r\n};\r\n\r\nexport default withApi;\r\n","import _ from 'lodash';\r\n\r\nconst initialState = {\r\n  scoreArr: [],\r\n  averageScore: 0,\r\n  gamesPlayed: 0,\r\n};\r\n\r\nconst rickTalksReducer = (currentScoreState = initialState, scoreAction) => {\r\n  switch (scoreAction.type) {\r\n    case 'ADD_SCORE':\r\n      return {\r\n        ...currentScoreState,\r\n        scoreArr: [...currentScoreState.scoreArr, scoreAction.payload.newScore],\r\n        averageScore: _.round(\r\n          _.mean([...currentScoreState.scoreArr, scoreAction.payload.newScore]),\r\n          1\r\n        ),\r\n        gamesPlayed: currentScoreState.gamesPlayed + 1,\r\n      };\r\n    default:\r\n      return currentScoreState;\r\n  }\r\n};\r\n\r\nexport default rickTalksReducer;\r\n","import rickTalksReducer from '../components/RickTalks/Store/rickTalksReducer';\r\n\r\nconst appReducer = (state = {}, action) => {\r\n  return {\r\n    rickTalks: rickTalksReducer(state.rickTalks, action),\r\n  };\r\n};\r\n\r\nexport default appReducer;\r\n","import configureStore from './configureStore';\r\n\r\nconst appStore = configureStore({});\r\n\r\nexport default appStore;\r\n","import { compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport appReducer from './appReducer';\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const enhancers = [composeWithDevTools()];\r\n  const composedEnhancers = compose(...enhancers);\r\n\r\n  const store = createStore(appReducer, preloadedState, composedEnhancers);\r\n\r\n  return store;\r\n}\r\n","import React from 'react';\r\nimport appStore from '../../appStore/appStore';\r\n\r\nconst withScore = (WrappedComponent) => {\r\n  class WithScore extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        score: 0,\r\n        currentTry: 1,\r\n        scoreDisplay: false,\r\n        scoreMessage: '',\r\n        scoreStyle: 'font--small--red',\r\n      };\r\n      this.toggleScoreDisplay = this.toggleScoreDisplay.bind(this);\r\n      this.increment = this.increment.bind(this);\r\n      this.incrementScore = this.incrementScore.bind(this);\r\n      this.incrementCurrentTry = this.incrementCurrentTry.bind(this);\r\n      this.resetGame = this.resetGame.bind(this);\r\n      this.setScoreMessage = this.setScoreMessage.bind(this);\r\n    }\r\n\r\n    setScoreMessage(scoreMessage, scoreStyle) {\r\n      this.setState({\r\n        scoreStyle,\r\n        scoreMessage,\r\n      });\r\n    }\r\n\r\n    sendFinalScore() {\r\n      const { currentTry, score } = this.state;\r\n      if (currentTry === 11) {\r\n        appStore.dispatch({\r\n          type: 'ADD_SCORE',\r\n          payload: { newScore: score },\r\n        });\r\n      }\r\n    }\r\n\r\n    increment(stateValue, callback) {\r\n      this.setState((prevState) => {\r\n        return { [stateValue]: prevState[stateValue] + 1 };\r\n      }, callback);\r\n    }\r\n\r\n    incrementScore() {\r\n      this.increment('score');\r\n    }\r\n\r\n    incrementCurrentTry() {\r\n      this.increment('currentTry', this.sendFinalScore);\r\n    }\r\n\r\n    toggleScoreDisplay() {\r\n      const { scoreDisplay } = this.state;\r\n      this.setState({\r\n        scoreDisplay: !scoreDisplay,\r\n      });\r\n    }\r\n\r\n    resetGame() {\r\n      this.setState({\r\n        score: 0,\r\n        currentTry: 1,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        scoreDisplay,\r\n        score,\r\n        currentTry,\r\n        scoreMessage,\r\n        scoreStyle,\r\n      } = this.state;\r\n      return (\r\n        <WrappedComponent\r\n          incrementCurrentTry={this.incrementCurrentTry}\r\n          toggleScoreDisplay={this.toggleScoreDisplay}\r\n          incrementScore={this.incrementScore}\r\n          resetGame={this.resetGame}\r\n          setScoreMessage={this.setScoreMessage}\r\n          scoreDisplay={scoreDisplay}\r\n          score={score}\r\n          currentTry={currentTry}\r\n          scoreMessage={scoreMessage}\r\n          scoreStyle={scoreStyle}\r\n          {...this.props}\r\n        />\r\n      );\r\n    }\r\n  }\r\n  return WithScore;\r\n};\r\n\r\nexport default withScore;\r\n","import React from 'react';\r\nimport '../../index.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport Loading from './Loading';\r\nimport Score from '../Score/Score';\r\nimport Game from './Game';\r\nimport withApi from '../HOC/withApi';\r\nimport withScore from '../HOC/withScore';\r\n\r\nclass DeadOrAlive extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      character: {},\r\n      loading: true,\r\n    };\r\n\r\n    this.nextOne = this.nextOne.bind(this);\r\n    this.playAgain = this.playAgain.bind(this);\r\n    this.checkAnswer = this.checkAnswer.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getCharactersArr } = this.props;\r\n    getCharactersArr(() => {\r\n      this.setCharacter(() => {\r\n        this.toggleLoadingDisplay();\r\n      });\r\n    });\r\n  }\r\n\r\n  setCharacter(callback) {\r\n    const { charactersArr, currentTry } = this.props;\r\n    this.setState(\r\n      {\r\n        character: charactersArr[currentTry - 1],\r\n      },\r\n      callback\r\n    );\r\n  }\r\n\r\n  checkAnswer(answer) {\r\n    const {\r\n      incrementCurrentTry,\r\n      incrementScore,\r\n      setScoreMessage,\r\n      toggleScoreDisplay,\r\n    } = this.props;\r\n    const { character } = this.state;\r\n\r\n    incrementCurrentTry();\r\n\r\n    if (answer === character.status && answer === 'Alive') {\r\n      incrementScore();\r\n      setScoreMessage(\r\n        `Yep! ${character.name} is alive! `,\r\n        'font--small--green'\r\n      );\r\n    } else if (answer === character.status && answer === 'Dead') {\r\n      incrementScore();\r\n      setScoreMessage(\r\n        `That's right! ${character.name} is dead! `,\r\n        'font--small--green'\r\n      );\r\n    } else if (answer === character.status && answer === 'unknown') {\r\n      incrementScore();\r\n      setScoreMessage(`You guessed it! It is unknown!`, 'font--small--green');\r\n    } else {\r\n      setScoreMessage(\r\n        `Ups! ${character.name} status: ${character.status}`,\r\n        'font--small--red'\r\n      );\r\n    }\r\n    toggleScoreDisplay();\r\n  }\r\n\r\n  nextOne() {\r\n    const { toggleScoreDisplay } = this.props;\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        this.setCharacter(() => {\r\n          toggleScoreDisplay();\r\n          this.toggleLoadingDisplay();\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  playAgain() {\r\n    const { toggleScoreDisplay, resetGame, getCharactersArr } = this.props;\r\n    toggleScoreDisplay();\r\n    resetGame();\r\n    this.setState(\r\n      {\r\n        loading: true,\r\n      },\r\n      () => {\r\n        getCharactersArr(() => {\r\n          this.setCharacter(() => {\r\n            this.toggleLoadingDisplay();\r\n          });\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  toggleLoadingDisplay() {\r\n    const { loading } = this.state;\r\n    this.setState({\r\n      loading: !loading,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      scoreDisplay,\r\n      score,\r\n      currentTry,\r\n      scoreMessage,\r\n      scoreStyle,\r\n    } = this.props;\r\n    const { loading, character } = this.state;\r\n    return (\r\n      <div>\r\n        {scoreDisplay === false && loading === false && (\r\n          <Game\r\n            currentTry={currentTry}\r\n            character={character}\r\n            checkAnswer={this.checkAnswer}\r\n          />\r\n        )}\r\n\r\n        {scoreDisplay && loading === false && (\r\n          <Score\r\n            scoreStyle={scoreStyle}\r\n            scoreMessage={scoreMessage}\r\n            characterImg={character.image}\r\n            score={score}\r\n            currentTry={currentTry}\r\n            nextOne={this.nextOne}\r\n            playAgain={this.playAgain}\r\n          />\r\n        )}\r\n\r\n        {loading === true && <Loading />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDeadOrAlive.propTypes = {\r\n  scoreDisplay: PropTypes.bool.isRequired,\r\n  currentTry: PropTypes.number.isRequired,\r\n  getCharactersArr: PropTypes.func.isRequired,\r\n  incrementCurrentTry: PropTypes.func.isRequired,\r\n  incrementScore: PropTypes.func.isRequired,\r\n  setScoreMessage: PropTypes.func.isRequired,\r\n  toggleScoreDisplay: PropTypes.func.isRequired,\r\n  resetGame: PropTypes.func.isRequired,\r\n  scoreMessage: PropTypes.string.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  scoreStyle: PropTypes.string.isRequired,\r\n  charactersArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      status: PropTypes.string,\r\n      species: PropTypes.string,\r\n      type: PropTypes.string,\r\n      gender: PropTypes.string,\r\n      origin: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      }),\r\n      location: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      }),\r\n      image: PropTypes.string,\r\n      episode: PropTypes.arrayOf(PropTypes.string),\r\n      url: PropTypes.string,\r\n      created: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default compose(withScore, withApi)(DeadOrAlive, 10);\r\n","import React from 'react';\r\nimport './whoIsWho.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Board(props) {\r\n  const { id, className, children, checkAnswer } = props;\r\n\r\n  const drop = (e) => {\r\n    e.preventDefault();\r\n    const cardId = e.dataTransfer.getData('card_id');\r\n    const card = document.getElementById(cardId);\r\n\r\n    const all = document.getElementsByClassName('board');\r\n    for (let i = 0; i < all.length; i += 1) {\r\n      all[i].style.backgroundImage = 'none';\r\n    }\r\n\r\n    if (e.target.id === 'board-compare') {\r\n      e.target.appendChild(card);\r\n    }\r\n\r\n    checkAnswer(cardId.slice(5));\r\n  };\r\n\r\n  const dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div id={id} className={className} onDrop={drop} onDragOver={dragOver}>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nBoard.defaultProps = {\r\n  checkAnswer: undefined,\r\n};\r\n\r\nBoard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n  checkAnswer: PropTypes.func,\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport './whoIsWho.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Card(props) {\r\n  const dragStart = (e) => {\r\n    const { target } = e;\r\n    e.dataTransfer.setData('card_id', target.id);\r\n  };\r\n\r\n  const dragOver = (e) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const { id, className, draggable, children } = props;\r\n  return (\r\n    <div\r\n      id={id}\r\n      className={className}\r\n      draggable={draggable}\r\n      onDragStart={dragStart}\r\n      onDragOver={dragOver}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nCard.defaultProps = {\r\n  id: undefined,\r\n  className: undefined,\r\n  children: undefined,\r\n};\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.string,\r\n  className: PropTypes.string,\r\n  children: PropTypes.element,\r\n  draggable: PropTypes.string.isRequired,\r\n};\r\nexport default Card;\r\n","import React from 'react';\r\nimport './whoIsWho.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Board from './Board';\r\nimport Card from './Card';\r\n\r\nfunction Game(props) {\r\n  const {\r\n    currentTry,\r\n    charactersArr,\r\n    checkAnswer,\r\n    searchedCharacterName,\r\n  } = props;\r\n  return (\r\n    <div>\r\n      <h1 className=\"font--small\">{currentTry} of 10</h1>\r\n      <div className=\"character-grid\">\r\n        {charactersArr.map((character) => (\r\n          <Board\r\n            id={`board-${character.id}`}\r\n            key={character.id}\r\n            className=\"board\"\r\n          >\r\n            <Card className=\"card\" draggable=\"true\">\r\n              <img\r\n                id={`card-${character.id}`}\r\n                src={character.image}\r\n                className=\"character__img--small\"\r\n                alt=\"character\"\r\n              />\r\n            </Card>\r\n          </Board>\r\n        ))}\r\n        <Board\r\n          id=\"board-compare\"\r\n          className=\"board__compare\"\r\n          checkAnswer={checkAnswer}\r\n        >\r\n          <Card id=\"card-compare\" draggable=\"false\" />\r\n        </Board>\r\n      </div>\r\n\r\n      <div className=\"font--small answer\">\r\n        <p>Drag {searchedCharacterName} into the empty slot</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGame.defaultProps = {\r\n  searchedCharacterName: undefined,\r\n};\r\nGame.propTypes = {\r\n  currentTry: PropTypes.number.isRequired,\r\n  checkAnswer: PropTypes.func.isRequired,\r\n  searchedCharacterName: PropTypes.string,\r\n  charactersArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      status: PropTypes.string,\r\n      species: PropTypes.string,\r\n      type: PropTypes.string,\r\n      gender: PropTypes.string,\r\n      origin: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      }),\r\n      location: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      }),\r\n      image: PropTypes.string,\r\n      episode: PropTypes.arrayOf(PropTypes.string),\r\n      url: PropTypes.string,\r\n      created: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport { compose } from 'redux';\r\nimport './whoIsWho.scss';\r\nimport PropTypes from 'prop-types';\r\nimport Game from './Game';\r\nimport Score from '../Score/Score';\r\nimport withApi from '../HOC/withApi';\r\nimport withScore from '../HOC/withScore';\r\n\r\nclass WhoIsWho extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchedCharacter: {},\r\n    };\r\n\r\n    this.checkAnswer = this.checkAnswer.bind(this);\r\n    this.nextOne = this.nextOne.bind(this);\r\n    this.playAgain = this.playAgain.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { getCharactersArr } = this.props;\r\n    getCharactersArr(() => {\r\n      this.getSearchedCharacter();\r\n    });\r\n  }\r\n\r\n  getSearchedCharacter(callback) {\r\n    const { charactersArr } = this.props;\r\n    const randomIndex = Math.floor(Math.random() * 7);\r\n    this.setState(\r\n      {\r\n        searchedCharacter: charactersArr[randomIndex],\r\n      },\r\n      callback\r\n    );\r\n  }\r\n\r\n  checkAnswer(answer) {\r\n    const { searchedCharacter } = this.state;\r\n    const {\r\n      incrementScore,\r\n      incrementCurrentTry,\r\n      toggleScoreDisplay,\r\n      setScoreMessage,\r\n    } = this.props;\r\n    if (answer === searchedCharacter.id.toString()) {\r\n      setTimeout(() => {\r\n        setScoreMessage(\r\n          `You guessed it! This is ${searchedCharacter.name}:`,\r\n          'font--small--green'\r\n        );\r\n        incrementScore();\r\n        incrementCurrentTry();\r\n        toggleScoreDisplay();\r\n      }, 300);\r\n    } else {\r\n      setTimeout(() => {\r\n        setScoreMessage(\r\n          `Ups! You got it wrong! This is ${searchedCharacter.name}:`,\r\n          'font--small--red'\r\n        );\r\n        incrementCurrentTry();\r\n        toggleScoreDisplay();\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  nextOne() {\r\n    const { getCharactersArr, toggleScoreDisplay } = this.props;\r\n    getCharactersArr(() => {\r\n      this.getSearchedCharacter(() => {\r\n        toggleScoreDisplay();\r\n      });\r\n    });\r\n  }\r\n\r\n  playAgain() {\r\n    const { toggleScoreDisplay, resetGame, getCharactersArr } = this.props;\r\n    toggleScoreDisplay();\r\n    resetGame();\r\n    getCharactersArr(() => {\r\n      this.getSearchedCharacter();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      scoreDisplay,\r\n      currentTry,\r\n      charactersArr,\r\n      score,\r\n      scoreStyle,\r\n      scoreMessage,\r\n    } = this.props;\r\n    const { searchedCharacter } = this.state;\r\n    return (\r\n      <div>\r\n        {scoreDisplay === false ? (\r\n          <Game\r\n            currentTry={currentTry}\r\n            charactersArr={charactersArr}\r\n            checkAnswer={this.checkAnswer}\r\n            searchedCharacterName={searchedCharacter.name}\r\n          />\r\n        ) : (\r\n          <Score\r\n            scoreStyle={scoreStyle}\r\n            scoreMessage={scoreMessage}\r\n            characterImg={searchedCharacter.image}\r\n            score={score}\r\n            currentTry={currentTry}\r\n            nextOne={this.nextOne}\r\n            playAgain={this.playAgain}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nWhoIsWho.defaultProps = {\r\n  searchedCharacter: undefined,\r\n};\r\nWhoIsWho.propTypes = {\r\n  charactersArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      status: PropTypes.string,\r\n      species: PropTypes.string,\r\n      type: PropTypes.string,\r\n      gender: PropTypes.string,\r\n      origin: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      }),\r\n      location: PropTypes.shape({\r\n        name: PropTypes.string,\r\n        url: PropTypes.string,\r\n      }),\r\n      image: PropTypes.string,\r\n      episode: PropTypes.arrayOf(PropTypes.string),\r\n      url: PropTypes.string,\r\n      created: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  searchedCharacter: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    name: PropTypes.string,\r\n    status: PropTypes.string,\r\n    species: PropTypes.string,\r\n    type: PropTypes.string,\r\n    gender: PropTypes.string,\r\n    origin: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      url: PropTypes.string,\r\n    }),\r\n    location: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      url: PropTypes.string,\r\n    }),\r\n    image: PropTypes.string,\r\n    episode: PropTypes.arrayOf(PropTypes.string),\r\n    url: PropTypes.string,\r\n    created: PropTypes.string,\r\n  }),\r\n  getCharactersArr: PropTypes.func.isRequired,\r\n  incrementScore: PropTypes.func.isRequired,\r\n  resetGame: PropTypes.func.isRequired,\r\n  incrementCurrentTry: PropTypes.func.isRequired,\r\n  toggleScoreDisplay: PropTypes.func.isRequired,\r\n  setScoreMessage: PropTypes.func.isRequired,\r\n  currentTry: PropTypes.number.isRequired,\r\n  scoreDisplay: PropTypes.bool.isRequired,\r\n  scoreMessage: PropTypes.string.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  scoreStyle: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default compose(withScore, withApi)(WhoIsWho, 8);\r\n","import React from 'react';\r\nimport '../../index.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './navigation.module.scss';\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <nav>\r\n      <div className=\"titleContainer\">\r\n        <NavLink\r\n          to=\"/RickTalks\"\r\n          className={styles.title}\r\n          activeClassName={styles.titleActive}\r\n        >\r\n          KNOW YOUR RICK AND MORTY\r\n        </NavLink>\r\n      </div>\r\n      <div>\r\n        <span>\r\n          <NavLink\r\n            to=\"/DeadOrAlive\"\r\n            className={styles.navbarLink}\r\n            activeClassName={styles.navbarLinkActive}\r\n          >\r\n            Dead or alive{' '}\r\n          </NavLink>\r\n        </span>\r\n\r\n        <span>\r\n          <NavLink\r\n            to=\"/WhoIsWho\"\r\n            className={styles.navbarLink}\r\n            activeClassName={styles.navbarLinkActive}\r\n          >\r\n            {' '}\r\n            Who is who\r\n          </NavLink>\r\n        </span>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport './rickTalks.scss';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function RickTalks(props) {\r\n  const { gamesPlayed, averageScore } = props;\r\n\r\n  return (\r\n    <div className=\"rickTalksContainer\">\r\n      <div className=\"rickTalks\">\r\n        Your life purpose is to improve this score!\r\n      </div>\r\n\r\n      <div className=\"font--small--green alignStart\">\r\n        <p>You have </p>\r\n        <p>\r\n          played {gamesPlayed}\r\n          {gamesPlayed > 1 || gamesPlayed === 0 ? ' games' : ' game'}\r\n        </p>\r\n        <p>Your average </p>\r\n        <p>score is {averageScore}/10</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    averageScore: state.rickTalks.averageScore,\r\n    gamesPlayed: state.rickTalks.gamesPlayed,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addScore: () => dispatch({ type: 'ADD_SCORE', payload: { newScore: 9 } }),\r\n  };\r\n};\r\n\r\nRickTalks.propTypes = {\r\n  gamesPlayed: PropTypes.number.isRequired,\r\n  averageScore: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RickTalks);\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport DeadOrAlive from './components/DeadOrAlive/DeadOrAlive';\r\nimport WhoIsWho from './components/WhoIsWho/WhoIsWho';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport RickTalks from './components/RickTalks/RickTalks';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <header className=\"App__header\">\r\n        <Navigation />\r\n      </header>\r\n      <div className=\"container__games\">\r\n        <Switch>\r\n          <Route path=\"/DeadOrAlive\">\r\n            <DeadOrAlive />\r\n          </Route>\r\n          <Route path=\"/WhoIsWho\">\r\n            <WhoIsWho />\r\n          </Route>\r\n          <Route path=\"/RickTalks\">\r\n            <RickTalks />\r\n          </Route>\r\n          <Route path=\"/\" render={() => <Redirect to=\"/DeadOrAlive\" />} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport appStore from './appStore/appStore';\n\nReactDOM.render(\n  <Provider store={appStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}